## ADVERTISEMENT 
: <identifier> : <serialNo> : <timestamp> : "advertisement" : <server-port> : <services> : 


## SEARCH REQUEST 
: <identifier> : <serialNo> : <timestamp> : "search-request" : <search-string> : 

## SEARCH RESULT 
: <identifier> : <serialNo> : <timestamp> : "search-result" : <response-id> : <file-string> : 

## SEARCH ERROR 
: <current identifier> : <request serialNo> : <timestamp> : "search-error" : <response-id (of requester)> :



Questions:
1. Should serialNo of each message be unique, or should request-response pairs have the same serialNo?


Todo : 
3. The receiver tasks currently are single-threaded. That is they add incoming messages to a data structure,
   and process messages in the data structure intermittently. Explore whether it would be better to designate 
   a threadpool in each receiver task for multi-processing the processing of messages? So we don't have to 
   necessarily create a new thread to handle each new incoming message, but rather have a fixed pool which may 
   be an improvement on the single-thread architecture.
5. Consider putting incoming searchrequest messages and outgoing searchrequest messages in the same datastructure 
    could multi-thread the processing of search-request messages out of the structure 
6. Make sure functionality works with capabilities 
7. Consider queueing outgoing requests to make sure responese line-up one-to-one 


Important design decisions 
- File download handling : queue download requests and send over files for each request one at a time,
  versus creating thread for each request, allowing for concurrent handling? 
- 